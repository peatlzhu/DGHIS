<hc:Window xmlns:Mask="clr-namespace:DGHIS.Core.Controls.Mask;assembly=DGHIS.Core"  x:Class="DGHIS.Shell.Views.MainWindow" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:cmmod="clr-namespace:DGHIS.Core.Modules;assembly=DGHIS.Core"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:prism="http://prismlibrary.com/" 
        xmlns:local="clr-namespace:DGHIS.Shell.Views" 
        x:Name="main"        
        xmlns:hc="https://handyorg.github.io/handycontrol"
        prism:ViewModelLocator.AutoWireViewModel="True"         
        WindowStartupLocation="CenterScreen"     
            OtherButtonForeground="{DynamicResource ReverseTextBrush}"
           CloseButtonForeground="{DynamicResource ReverseTextBrush}"
         Icon="/images/his.ico"
         ShowIcon="False"
          mc:Ignorable="d" 
         d:DesignHeight="768" d:DesignWidth="1600"
           ShowTitle="False"       
           WindowState="Maximized"
           NonClientAreaBackground="{DynamicResource EMRCPOE.Main.Background}" 
           NonClientAreaHeight="62"
            Title="一站式医疗管理系统" >
    <hc:Window.Resources>      
        <ResourceDictionary>
            <DataTemplate x:Key="D1">
                <Border>
                    <Grid>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=hc:TabItem}, Path=Content.DataContext.Title}" />
                    </Grid>
                </Border>
          </DataTemplate>         
            <Color x:Key="ForeReverseColor">#FFFFFF</Color>
            <SolidColorBrush x:Key="DeepForegroundBrush" Color="#e0e0e0" />
            <SolidColorBrush x:Key="ForeReverseBrush.OpacityTwo" Opacity="0.2" Color="{StaticResource ForeReverseColor}" />
            <SolidColorBrush x:Key="ForeReverseBrush.OpacitySix" Opacity="0.6" Color="{StaticResource ForeReverseColor}" />            
            <SolidColorBrush x:Key="ForeReverseBrush" Color="{StaticResource ForeReverseColor}" />         
        </ResourceDictionary>
    </hc:Window.Resources>
    <hc:Window.NonClientAreaContent>
        <Grid Height="62">
            <!--<Image Source="/images/his.ico" HorizontalAlignment="Center" />-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Menu Name="MainMenu"  ItemsSource="{Binding Path=MainMenuItemsSource}">
                <ItemsControl.ItemContainerStyleSelector>
                    <local:MenuStyleSelector />
                </ItemsControl.ItemContainerStyleSelector>
                <Menu.Resources>
                    <ResourceDictionary>
                        <Style x:Key="MainMenuStyle" TargetType="{x:Type MenuItem}">
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="23,0" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Grid>
                                            <Grid Name="MenuContentBorder" Background="{TemplateBinding Background}">
                                                <Rectangle Name="SelectedBackground" Fill="{StaticResource ForeReverseBrush.OpacityTwo}" />
                                                <ContentPresenter ContentSource="Header" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                                            </Grid>
                                            <Popup PopupAnimation="Slide" AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <Border Background="#FFFFFFFF" BorderBrush="{StaticResource DeepForegroundBrush}">
                                                    <ItemsPresenter />
                                                </Border>
                                            </Popup>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible" />
                                            </Trigger>
                                            <Trigger Property="UIElement.IsMouseOver" Value="False">
                                                <Setter TargetName="SelectedBackground" Property="Visibility" Value="Hidden" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ForeReverseBrush}" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                            <Style.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource ForeReverseBrush}" />
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Foreground" Value="{StaticResource ForeReverseBrush.OpacitySix}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                            <Grid Name="SelectedBackground">
                                                <ContentPresenter Margin="{TemplateBinding Padding}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="MouseLeftButtonUp" >
                                                        <b:InvokeCommandAction Command="{Binding DataContext.SelectedIntoPage,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding .}"   />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                <Setter TargetName="SelectedBackground" Property="Panel.Background" Value="{StaticResource ForeReverseBrush.OpacityTwo}" />
                                            </Trigger>
                                            <Trigger Property="UIElement.IsMouseOver" Value="False">
                                                <Setter TargetName="SelectedBackground" Property="Panel.Background" Value="{x:Null}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="MinWidth" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}}" />
                            <Setter Property="Height" Value="36" />
                            <Setter Property="Padding" Value="10,0" />
                            <Setter Property="Background" Value="{StaticResource EMRCPOE.Main.Background}" />
                        </Style>
                        <HierarchicalDataTemplate x:Key="{DataTemplateKey {x:Type cmmod:MenuEntity}}" DataType="{x:Type cmmod:MenuEntity}" ItemsSource="{Binding Path=Children}">
                            <TextBlock Text="{Binding Path=Name}" />
                        </HierarchicalDataTemplate>
                    </ResourceDictionary>
                </Menu.Resources>
                <Menu.Style>
                    <Style TargetType="{x:Type Menu}">
                        <Setter Property="Background" Value="#00FFFFFF" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Menu}">
                                    <ItemsPresenter Name="ItemsPresenter" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Menu.Style>
            </Menu>
            </StackPanel>
            <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right"> 
                <ItemsControl HorizontalAlignment="Right">
                    <WrapPanel>
                        <TextBlock 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="&#xE6EB;"
                               FontSize="18"
                               Foreground="{DynamicResource EMRCPOE.StatusBarItem.Background}"
                               Style="{DynamicResource TextBlockAppIcons}" />
                        <TextBlock FontSize="22" FontWeight="Bold" Foreground="#FFFFFFFF" Margin="10 2 0 0" HorizontalAlignment="Right" Text="{Binding CurrentUser.HospitalName}" />
                    </WrapPanel>               
                    <WrapPanel Margin="0 5 0 0">
                        <TextBlock Margin="2"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="&#xE6EF;"
                               FontSize="15"
                               Foreground="{DynamicResource EMRCPOE.StatusBarItem.Background}"
                               Style="{DynamicResource TextBlockAppIcons}" />
                        <TextBlock FontSize="14" Foreground="#FFFFFFFF" Margin="10 2 0 0" Text="{Binding CurrentUser.ShowText}" />
                    </WrapPanel>
                </ItemsControl>               
                <StackPanel  Orientation="Horizontal"  HorizontalAlignment="Right" VerticalAlignment="Top">
                    <StackPanel  Orientation="Horizontal" Margin="10 10 " HorizontalAlignment="Right" VerticalAlignment="Top" >
                        <hc:Badge Value="{Binding WarningCount}"   Style="{StaticResource BadgeDanger}">
                            <ToggleButton IsChecked="{Binding IsOpen,ElementName=DrawerRight}"  Cursor="Hand" Style="{StaticResource ToggleButtonCustom}" Width="30" Height="30">
                                <Border>
                                    <Path Margin="6" Fill="#212121" Stretch="Uniform" Data="{StaticResource WarningGeometry}"/>
                                </Border>
                            </ToggleButton>
                        </hc:Badge>
                    </StackPanel>
                    <Button Style="{StaticResource ButtonCustom}" Width="30" Height="30" Cursor="Hand" >
                    <Border>
                        <Path Margin="6" Fill="#212121" Stretch="Uniform" Data="{StaticResource ConfigGeometry}"/>
                    </Border>
                </Button>
            </StackPanel>
            </WrapPanel>
        </Grid>
    </hc:Window.NonClientAreaContent>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction PassEventArgsToCommand="True" Command="{Binding CloseWindowCommand}"  />
        </b:EventTrigger>     
    </b:Interaction.Triggers>
    <hc:Interaction.Triggers>
        <hc:RoutedEventTrigger RoutedEvent="hc:TabItem.Closing">
            <hc:EventToCommand Command="{Binding ClosingCmd}" PassEventArgsToCommand="True" />
        </hc:RoutedEventTrigger>
        <hc:RoutedEventTrigger RoutedEvent="hc:TabItem.Closed">
            <hc:EventToCommand Command="{Binding ClosedCmd}" PassEventArgsToCommand="True"/>
        </hc:RoutedEventTrigger>
    </hc:Interaction.Triggers>
    <Grid>
        <hc:Drawer Name="DrawerRight" MaskCanClose="False">
            <Border Background="{DynamicResource RegionBrush}" Width="300" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource BorderBrush}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Margin="10,0,0,0" Text="系统消息" Style="{StaticResource TextBlockTitle}" HorizontalAlignment="Left"/>
                    <Button Command="hc:ControlCommands.Close" Grid.Row="0" HorizontalAlignment="Right" Foreground="{DynamicResource PrimaryTextBrush}" Style="{StaticResource ButtonIcon}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"/>
                </Grid>
            </Border>
        </hc:Drawer>
        <Grid Panel.ZIndex="9999" >
            <Mask:LoadingWait   x:Name="maskGrid" Visibility="Collapsed" />
        </Grid>
        <Grid Panel.ZIndex="0">
            <Grid.RowDefinitions>         
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>          
            <Grid >        
                 <Grid.Background>
                    <Binding Source="{StaticResource CloudDrawingBrush}"  />
                </Grid.Background>         
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <local:LeftMenuContent  Grid.Column="0" Margin="5 5 0 5" Width="Auto"/>
                <!--<hc:TabControl Grid.Column="1"  ItemTemplate="{StaticResource D1}" Background="Transparent" x:Name="MainTabPanel" prism:RegionManager.RegionName="ContentRegion" ShowOverflowButton="False" ShowScrollButton="False" IsScrollable="True" Margin="5" IsAnimationEnabled="True" ShowCloseButton="True" IsDraggable="False" IsTabFillEnabled="False"   >-->
                <hc:TabControl Grid.Column="1"   Background="Transparent" x:Name="MainTabPanel" prism:RegionManager.RegionName="ContentRegion" ShowOverflowButton="False" ShowScrollButton="False" IsScrollable="True" Margin="5" IsAnimationEnabled="True" ShowCloseButton="True" IsDraggable="False" IsTabFillEnabled="False"   >
                    <!--<TabControl Grid.Column="1"   Background="Transparent" x:Name="MainTabPanel" prism:RegionManager.RegionName="ContentRegion"   >-->
                    <hc:TabControl.ItemTemplate>
                        <DataTemplate>
                            <Border>
                                <Grid>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=hc:TabItem}, Path=Content.DataContext.Title}" />
                                    <!--<Button Height="Auto" Width="Auto"   BorderThickness="0" Command="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=DataContext.DeleteCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=Content}" >
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Grid Height="8"  Width="8" Background="Transparent"   Margin="65,0,10,0">
                                                    <Path   Data="M307,28.093333 L52.333333,250.76" Fill="Red" Stretch="Fill"   Stroke="#FFEA1717" HorizontalAlignment="Right" />
                                                    <Path   Data="M56.666667,53 L352,265.66667" Fill="Red"  Stretch="Fill"   Stroke="#FFEA1717" HorizontalAlignment="Right" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>-->
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </hc:TabControl.ItemTemplate>
                </hc:TabControl>
              </Grid>
            <local:BottomStatusContent Grid.Row="1"  />
        </Grid>

    </Grid>
  
</hc:Window>